name: owl-wms-multinode

resources:
  image_id: docker:us-central1-docker.pkg.dev/openworld-main/skypilot/owl-wm-cond@sha256:1076e5243d6eeb93bbe509e20aaec7032f417482d27d1f8c355192ba9e29771b
  accelerators: H200:8
  cloud: kubernetes

num_nodes: 2

setup: |
  # Commands to run inside the container
  echo "Setting up multi-node training environment..."
  cd /app/owl-vaes
  git fetch && git checkout ${GIT_TARGET}
  uv pip install --system --break-system-packages --no-cache-dir -r requirements.txt

  mv /app/owl-vaes/train_new.py /app/owl-vaes/train.py

  cp /app/.env .


file_mounts:
  /app/owl-vaes/.env: ./.env
  /app/owl-vaes/train_new.py: ./train.py
  /app/owl-vaes/configs/test.yaml: ./configs/test.yaml


run: |
  export LOGLEVEL=INFO
  cd /app/owl-vaes

  # Get the head node IP
  MASTER_ADDR=$(echo "$SKYPILOT_NODE_IPS" | head -n1)
  echo "Starting distributed training, head node: $MASTER_ADDR"

  # Run distributed training with torchrun
  python3 -m torch.distributed.run \
    --nnodes=$SKYPILOT_NUM_NODES \
    --nproc_per_node=$SKYPILOT_NUM_GPUS_PER_NODE \
    --master_addr=$MASTER_ADDR \
    --node_rank=${SKYPILOT_NODE_RANK} \
    --master_port=8008 \
    -m train --config_path ${TRAIN_CONFIG}
